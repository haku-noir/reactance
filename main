#!/usr/bin/env node
'use strict'

const program = require('commander');

program
  .name('reactance')
  .version(require(`${__dirname}/package.json`).version, '-v, --version');

program
  .command('new <app_name>')
  .alias('n')
  .description('create a new app template of React & Redux')
  .option('-a, --author <author>', 'set author')
  .option('-m, --minimum', 'only React without Redux')
  .action((app_name, options) => {
    require('./create-react-custom-app')(app_name, options.author, options.minimum);
  });

program
  .command('reducer <reducer_name>')
  .alias('r')
  .description('create a Redux reducer & a Redux actions')
  .option('-m, --minimum', 'without sample')
  .action((reducer_name, options) => {
    require('./create-actions-reducer')(reducer_name, options.minimum);
  });

program
  .command('component <component_name>')
  .alias('c')
  .description('create a React component & a Redux container')
  .option('-m, --minimum', 'only a React component without a Redux container')
  .action((component_name, options) => {
    require('./create-component-container')(component_name, options.minimum);
  });

program
  .command('api <api_component_name>')
  .alias('a')
  .description('create a React & Redux api component')
  .action((component_name) => {
    require('./create-api-component')(component_name);
  });

program
  .command('extractor <extractor_component_name>')
  .alias('e')
  .description('create a React & Redux extractor component')
  .action((component_name) => {
    require('./create-extractor-component')(component_name);
  });

program.parse(process.argv);
